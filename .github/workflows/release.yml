name: Release Package

on:
  push:
    tags:
      - "test-*"
      - "prod-*"

permissions:
  contents: read
  id-token: write

jobs:
  release-test:
    name: Publish to TestPyPI
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/test-')
    environment: test

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # ensures we can verify branches if needed

      - name: Verify tag is from releases branch
        run: |
          TAG_COMMIT="$(git rev-list -n 1 $GITHUB_REF)"
          git fetch origin releases:refs/remotes/origin/releases
          if git merge-base --is-ancestor "$TAG_COMMIT" origin/releases; then
            echo "Tag commit is on or after 'releases' branch."
          else
            echo "Tag not based on 'releases' branch. Aborting."
            exit 1
          fi

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.10.19"

      - name: Run checks
        working-directory: ./mctl
        run: |
          make install-all
          make lint

      - name: Clean
        working-directory: ./mctl
        run: |
          make clean

      - name: Build package
        working-directory: ./mctl
        run: |
          make package

      - name: Publish to TestPyPI
        working-directory: ./mctl
        env:
          POETRY_PYPI_TOKEN_TESTPYPI: ${{ secrets.PYPI_TOKEN }}
        run: |
          poetry publish -r testpypi --build -u __token__ -p "$POETRY_PYPI_TOKEN_TESTPYPI"

  release-prod:
    name: Publish to PyPI
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/prod-')
    environment: prod

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Verify tag is from releases branch
        run: |
          TAG_COMMIT="$(git rev-list -n 1 $GITHUB_REF)"
          git fetch origin releases:refs/remotes/origin/releases
          if git merge-base --is-ancestor "$TAG_COMMIT" origin/releases; then
            echo "Tag commit is on or after 'releases' branch."
          else
            echo "Tag not based on 'releases' branch. Aborting."
            exit 1
          fi

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.10.19"

      - name: Run checks
        working-directory: ./mctl
        run: |
          make install-all
          make lint

      - name: Clean
        working-directory: ./mctl
        run: |
          make clean

      - name: Build package
        working-directory: ./mctl
        run: |
          make package

      - name: Publish to PyPI
        working-directory: ./mctl
        env:
          POETRY_PYPI_TOKEN_PYPI: ${{ secrets.PYPI_TOKEN }}
        run: |
          poetry publish -r pypi --build -u __token__ -p "$POETRY_PYPI_TOKEN_PYPI"
